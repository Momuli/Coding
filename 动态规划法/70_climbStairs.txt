0阶：1
1阶：1
2阶：2
3阶：3

因为每次可以跨1个 or 2个台阶:
那么,如果有n个台阶:f(n) = f(n-1)+f(n-2)

climbStairs1:
空间复杂度:O(1)
时间复杂度：O(n)
只定义三个指针,循换保存n-2个台阶，n-1个台阶和n个台阶的种类数

climbStairs2:
动态规划法
根据状态转移方程，填写dp表：f(n) = f(n-1)+f(n-2)
直接返回索引f(n)处的值

climbStairs3:
递归法
结束条件：n==1 or n==0 时：return 1
否则：
递归